 #include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

int x[100005], y[100005], z[200015], len, temp[100005];

string a, b;

int compare(int a[],int b[])
{
    int i;
    if (a[0] > b[0]) return 1;
    if (a[0] < b[0]) return -1;
    for (i = a[0]; i > 0; -- i)
    {
        if (a[i] > b[i]) return 1;
        if (a[i] < b[i]) return -1;
    }
    return 0;
}

void subduction(int a[],int b[])
{
    int flag;
    int i;
    flag = compare(a, b);
    if (flag == 0)
    {
        a[0] = 0;
        return;
    }
    if (flag == 1)
    {
        for (i = 1;i <= a[0]; ++ i)
        {
            if(a[i] < b[i])
            {
                -- a[i+1];
                a[i] += 10;
            }
            a[i] -= b[i];
        }
        while (a[0] > 0 && a[a[0]] == 0) -- a[0];
        return;
    }
}

int main()
{
    cin >> a >> b;
    memset(x, 0, sizeof(x));
    memset(y, 0, sizeof(y));
    memset(z, 0, sizeof(z));
    x[0] = a.size();
    y[0] = b.size();
    for (int i = 1; i <= x[0]; ++ i) x[i] = x[x[0] - i] - '0';  
    for (int i = 1; i <= y[0]; ++ i) y[i] = y[y[0] - i] - '0';
    z[0] = x[0] + y[0] + 1;
    for(int i = z[0];i > 0; -- i)
    {
        memset(temp,0,sizeof(temp));
        for(int j = 1; j <= y[0]; ++ j) temp[j + i - 1] = y[j];
        temp[0] = y[0] + i - 1;
        while(compare(x, temp) >= 0)
        {
            z[i]++;
            subduction(x, temp);
        }
    }
    while (z[0] > 0 && z[z[0]] == 0) -- z[0];
    if(z[0] == 0) cout << 0 << endl;
    else
    {
        for(int i = z[0]; i > 0; -- i) cout << z[i];
    }
    return 0;
}
